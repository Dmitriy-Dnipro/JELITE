function checkOrder(){var e=$("#main-order"),t=(e.serialize(),$("#main-order").find("input[name=name]").val(),$("#main-order").find("input[name=city]").val(),$("#main-order").find("input[name=tel]").val()),n=$("#main-order").find("input[name=email]").val(),o=$("#main-order").find("input[name=number]").val(),r=/^[\d ()+-]+$/,i=/^(([^<>()[\]\\.,;:\s@\"]+(\.[^<>()[\]\\.,;:\s@\"]+)*)|(\".+\"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/,l=0;return $("#main-order :input").map(function(){if($(this).val()){if(!r.test(t)){$("#result-box").html("Неправильный формат телефона, используйте только цифры, символы '+', '-' ");var e=$("header").height();return console.log(e),$("html, body").animate({scrollTop:$("#order").offset().top-e},500),!1}if(!i.test(n)){$("#result-box").html("Неправильный формат электронной почты");var e=$("header").height();return console.log(e),$("html, body").animate({scrollTop:$("#order").offset().top-e},500),!1}if(o<10){$("#result-box").html("Недостаточное количество наборов");var e=$("header").height();return console.log(e),$("html, body").animate({scrollTop:$("#order").offset().top-e},500),!1}$(this).val(),$(this).css({"border-bottom-color":"#dcdcdc"})}else $(this).css({"border-bottom-color":"red"}),l++}),l>0?($("#result-box").html("Заполните все обязательные поля"),!1):(setTimeout(function(){location.reload()},1e3),!0)}function checkSign(){var e=$("#sign-form"),t=(e.serialize(),$("#sign-form").find("input[name=name]").val()),n=$("#sign-form").find("input[name=tel]").val(),o=$("#sign-form").find("input[name=email]").val(),r=/^[\d ()+-]+$/,i=/^(([^<>()[\]\\.,;:\s@\"]+(\.[^<>()[\]\\.,;:\s@\"]+)*)|(\".+\"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;return 0==t.length||0==n.length?($("#result-sign").html("Заполните все обязательные поля"),!1):r.test(n)?i.test(o)?(setTimeout(function(){location.reload()},1e3),!0):($("#result-sign").html("Неправильный формат электронной почты"),!1):($("#result-sign").html("Неправильный формат телефона, используйте только цифры, символы '+', '-' "),!1)}function checkPopup(){var e=$("#form-popup"),t=(e.serialize(),$("#form-popup").find("input[name=name]").val()),n=$("#form-popup").find("input[name=tel]").val(),o=/^[\d ()+-]+$/;return 0==t.length||0==n.length?($("#result-popup").html("Заполните все обязательные поля"),!1):o.test(n)?(setTimeout(function(){location.reload()},1e3),!0):($("#result-popup").html("Неправильный формат телефона, используйте только цифры, символы '+', '-' "),!1)}function checkformInline(){var e=$("#line-form"),t=(e.serialize(),$("#line-form").find("input[name=name]").val()),n=$("#line-form").find("input[name=tel]").val(),o=/^[\d ()+-]+$/;return 0==t.length||0==n.length?($("#inline-result").html("Заполните все обязательные поля"),!1):o.test(n)?(setTimeout(function(){location.reload()},1e3),!0):($("#inline-result").html("Неправильный формат телефона, используйте только цифры, символы '+', '-' "),!1)}var refreshbutton=document.getElementById("refresh");
//# sourceMappingURL=data:application/json;charset=utf8;base64,
